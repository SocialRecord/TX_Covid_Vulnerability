import numpy as np
import pandas as pd


def acquire_people_data():
    df = pd.read_csv("./Data/People.csv")
    # Restrict df to only Texas
    df = df[df.State == "TX"]
    # Keep only the columns we want and set index to FIPS
    good_columns = [
        "FIPS",
        "State",
        "County",
        "LandAreaSQMiles2010",
        # Population estimates
        "TotalPopEst2018",
        "PopDensity2010",
        "Age65AndOlderNum2010",
        "Under18Num2010",
        "NaturalChange1018",
        # Household size
        "AvgHHSize",
        "TotalOccHU",
        "OwnHomeNum",
        # Head of Household
        "FemaleHHNum",
        "TotalHH",
        "NonEnglishHHNum",
        "HH65PlusAloneNum",
        # Education columns
        "Ed1LessThanHSNum",
        "Ed2HSDiplomaOnlyNum",
        "Ed3SomeCollegeNum",
        "Ed4AssocDegreeNum",
        "Ed5CollegePlusNum",
        # Race columns
        "WhiteNonHispanicNum2010",
        "BlackNonHispanicNum2010",
        "AsianNonHispanicNum2010",
        "NativeAmericanNonHispanicNum2010",
        "HispanicNum2010",
        "MultipleRaceNum2010",
    ]
    df = df[good_columns].set_index("FIPS")
    return df


def acquire_veteran_data():
    df = pd.read_csv("./Data/People.csv")
    # Restrict df to only Texas
    df = df[df.State == "TX"]
    # Keep only the columns we want and set index to FIPS
    good_columns = [
        "FIPS",
        "State",
        "County",
        # Income for both vets and non-vets
        "MedianVetsInc",
        "MedianNonVetsInc",
        # Number of vets 18 and over
        "Vets18ONum",
        # Number of vets in civilian labor force
        "CLFVets18to64Num",
        "NonVetsDisabilty",
        "VetsDisabilty",
        "NonVetsPoor",
        "VetsPoor",
    ]
    df = df[good_columns].set_index("FIPS")
    return df


def acquire_texas_hospitals():
    """Uses hospitals csv and return just the open texas hospitals"""
    hospitals = pd.read_csv("./Data/Hospitals.csv")

    # create mask to filter for hospitals in TX
    mask = hospitals.STATE == "TX"
    tx_hospitals = hospitals[mask]

    # drop useless columns
    tx_hospitals = tx_hospitals.drop(
        columns=[
            "X",
            "Y",
            "FID",
            "ID",
            "ZIP4",
            "TELEPHONE",
            "POPULATION",
            "COUNTRY",
            "NAICS_CODE",
            "SOURCE",
            "SOURCEDATE",
            "VAL_METHOD",
            "VAL_DATE",
            "WEBSITE",
            "ALT_NAME",
            "TTL_STAFF",
            "BEDS",
            "TRAUMA",
            "HELIPAD",
        ]
    )

    # rename county_fips to fips
    tx_hospitals.rename(columns={"COUNTYFIPS": "FIPS"}, inplace=True)

    # set county FIPS as index
    tx_hospitals = tx_hospitals.set_index("FIPS")

    # drop the closed hospitlas
    mask = tx_hospitals.STATUS == "OPEN"
    tx_hospitals = tx_hospitals[mask]

    return tx_hospitals

def acquire_covid_cases():
    df = pd.read_csv("./Data/time_series_covid19_confirmed_US.csv")
    # Restrict df to Texas
    df = df[df.Province_State == "Texas"]
    # Keep only most recent covid data
    columns_to_keep = ["FIPS", "Admin2", "6/16/20"]
    df = df[columns_to_keep]
    # Rename columns, make FIPS be integer, and set index to FIPS
    df = (
        df.astype({"FIPS": "int"})
        .set_index("FIPS")
        .rename(columns={"Admin2": "county", "6/16/20": "num_covid_cases"})
    )
    return df


def acquire_income_data():
    '''
    This function cleans the Income csv housed in the Data file of the repository
    and returns a dataframe ready to be joined on
    '''
    # Read in csv and set inded to FIPS
    df = pd.read_csv('./Data/Income.csv')
    df = df.set_index('FIPS')

    # Create a boolean mask where only observations where TX is the state are counted as true
    # Then apply the mask to the whole dataframe
    mask = df['State'] == 'TX'
    df = df[mask]

    # Drop columns we don't need
    df = df.drop(
        columns = ['PerCapitaInc', 
        'PovertyUnder18Pct', 
        'PovertyAllAgesPct', 
        'Deep_Pov_Children',
        'State',
        'County'])

    return df

def acquire_food_data():
    '''
    Clean and prepare the Food1 excel file and 
    return it as a dataframe ready to be joined on
    '''

    # Pull in only the columns I want
    file_loc = "./Data/Food1.xlsx"
    df = pd.read_excel(file_loc, index_col='FIPS', na_values=['NA'], usecols = "A,B,E")

    # Restrict df to Texas only
    mask = df['State'] == 'TX'
    df = df[mask]

    # Drop the state column
    df = df.drop(columns = 'State')
    return df